(window.webpackJsonp=window.webpackJsonp||[]).push([[142],{610:function(t,a,e){"use strict";e.r(a);var s=e(45),n=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"guide-overwriting-translations"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#guide-overwriting-translations"}},[t._v("#")]),t._v(" Guide: Overwriting Translations")]),t._v(" "),e("p",[t._v("It is possible to overwrite the standard translations or even to add a completely custom\ntranslation, e.g. for an unsupported language. This is an advanced feature that requires a little\nmore technical skill. This guide will show you how it's done.")]),t._v(" "),e("h2",{attrs:{id:"introducing-the-format-what-is-json"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#introducing-the-format-what-is-json"}},[t._v("#")]),t._v(" Introducing the format – What is JSON?")]),t._v(" "),e("p",[t._v("JSON is a markup language that is commonly used for configuration files and localization. This is\nbecause it is a simple format to read and write and is also very compact. There are, however, a\nfew minor challenges.")]),t._v(" "),e("p",[t._v("Let's just start with an example:")]),t._v(" "),e("div",{staticClass:"language-json extra-class"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"apples"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"bananas"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"peaches"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("The above is a simple JSON file with three key-value pairs. Note, that the quotation marks around\nthe key are required. Now, aside from numbers, there can also be strings. Strings should also be\nin quotes. Make sure, to use double quotes ("),e("code",[t._v('"')]),t._v(") not the typographically correct quotes ("),e("code",[t._v("“”")]),t._v(").")]),t._v(" "),e("div",{staticClass:"language-json extra-class"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"chocolate"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"As much as you want!"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("Also, the key-value pairs are surrounded by curly brackets ("),e("code",[t._v("{}")]),t._v("). These can be considered objects\nor levels. A JSON file can only have one root object.")]),t._v(" "),e("p",[t._v("Between key-value pairs is always a comma!")]),t._v(" "),e("p",[t._v("Next up: Nesting. This allows us to group options or strings together and give structure to our\ndocuments.")]),t._v(" "),e("div",{staticClass:"language-json extra-class"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"fruit"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"apples"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"bananas"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"peaches"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"sweets"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"chocolate"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"As much as you want!"')]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("Now we have two objects / groups. The items inside a group are indented with spaces. Let's add\nanother level:")]),t._v(" "),e("div",{staticClass:"language-json extra-class"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"fruit"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"regional"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"apples"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"peaches"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"remote"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"bananas"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"sweets"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"chocolate"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"As much as you want!"')]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("Note, that the last key-value pair in an object is not allowed to be followed by a comma!")]),t._v(" "),e("p",[t._v('We can add as many levels, as we need. Grouping items like this is not only helpful for readability\nand organisation, programmers can also easily navigate this structures to find the value they were\nlooking for by using the dot-notation. For example, if I wanted to know how many peaches to get, I\ncould describe the "path" like so: '),e("code",[t._v("fruit.regional.peaches")]),t._v(" and get "),e("code",[t._v("3")]),t._v(" in return.")]),t._v(" "),e("p",[t._v("Now, JSON can sometimes be a bit tricky. Should you experience problems with your JSON formatting,\nyou can validate your file using something like "),e("a",{attrs:{href:"https://jsonlint.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://jsonlint.com/"),e("OutboundLink")],1),t._v(".")]),t._v(" "),e("h2",{attrs:{id:"the-supported-languages"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#the-supported-languages"}},[t._v("#")]),t._v(" The supported languages")]),t._v(" "),e("p",[t._v("Currently, the following languages are officially supported:")]),t._v(" "),e("ul",[e("li",[t._v("German")]),t._v(" "),e("li",[t._v("English")])]),t._v(" "),e("p",[t._v("The following translations were provided by the community:")]),t._v(" "),e("ul",[e("li",[t._v("Arabic (ar)")]),t._v(" "),e("li",[t._v("Azerbaijani (az)")]),t._v(" "),e("li",[t._v("Bengali (bn)")]),t._v(" "),e("li",[t._v("Chinese Traditional (zh-TW)")]),t._v(" "),e("li",[t._v("Croatian (hr)")]),t._v(" "),e("li",[t._v("Greek (el)")]),t._v(" "),e("li",[t._v("Hausa (ha)")]),t._v(" "),e("li",[t._v("Hebrew (he)")]),t._v(" "),e("li",[t._v("Hindi (hi)")]),t._v(" "),e("li",[t._v("Hungarian (hu)")]),t._v(" "),e("li",[t._v("Indonesian (id)")]),t._v(" "),e("li",[t._v("Italian (it)")]),t._v(" "),e("li",[t._v("Japanese (ja)")]),t._v(" "),e("li",[t._v("Kinjarwanda (rw)")]),t._v(" "),e("li",[t._v("Korean (ko)")]),t._v(" "),e("li",[t._v("Malayalam (ml-IN)")]),t._v(" "),e("li",[t._v("Persian (fa)")]),t._v(" "),e("li",[t._v("Polish (pl)")]),t._v(" "),e("li",[t._v("Portuguese, Brazilian (pt-BR)")]),t._v(" "),e("li",[t._v("Romanian (ro)")]),t._v(" "),e("li",[t._v("Russian (ru)")]),t._v(" "),e("li",[t._v("Serbian, Cyrillic (sr)")]),t._v(" "),e("li",[t._v("Slovak (sk)")]),t._v(" "),e("li",[t._v("Spanish (es-ES)")]),t._v(" "),e("li",[t._v("Swahili (sw)")]),t._v(" "),e("li",[t._v("Thai (th)")]),t._v(" "),e("li",[t._v("Turkish (tr)")]),t._v(" "),e("li",[t._v("Ukranian (uk)")]),t._v(" "),e("li",[t._v("Vietnamese (vi)")])]),t._v(" "),e("h3",{attrs:{id:"so-how-do-you-actually-overwrite-translations"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#so-how-do-you-actually-overwrite-translations"}},[t._v("#")]),t._v(" So how do you actually overwrite translations?")]),t._v(" "),e("p",[t._v("Every language that is supported has it's own JSON file on GitHub. Actually, there are two files\nfor every language:")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://github.com/open-election-compass/ui/tree/master/src/locales",target:"_blank",rel:"noopener noreferrer"}},[t._v("OpenElectionCompass UI"),e("OutboundLink")],1),t._v("\n(a collection of generic UI components)")]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/open-election-compass/client/tree/master/src/locales",target:"_blank",rel:"noopener noreferrer"}},[t._v("OpenElectionCompass Client"),e("OutboundLink")],1),t._v("\n(the core software; this is most likely what you are looking for)")])]),t._v(" "),e("p",[t._v("If you want to create a complete custom language, you will need both. If you just want to overwrite\na few strings, you don't have to copy everything. Let's take a look at an example: The big green\nbutton that pops up at the bottom is called the GuideButton and it reads "),e("code",[t._v("Learn how this works")]),t._v(" in\nthe beginning. If I want to overwrite that with, say "),e("code",[t._v("Get started!")]),t._v(", I would need to do this:")]),t._v(" "),e("ol",[e("li",[t._v("Find the correct JSON file for the language I want to overwrite. Click the links above and take\na look at "),e("code",[t._v("en.json")]),t._v(" on GitHub.")]),t._v(" "),e("li",[t._v("Use the search to find the occurence of "),e("code",[t._v("Learn how this works")]),t._v(" in that file.")])]),t._v(" "),e("div",{staticClass:"language-json extra-class"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"elements"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    # ... there are some lines in between"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" but 'guide-button' is a "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"child"')]),t._v(" of 'elements'"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" so don't overlook this!\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"guide-button"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"start"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Let\'s go"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"introduction"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Learn how this works"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"first-thesis"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Start with the first thesis"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"thesis"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Proceed to the next thesis"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"party"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Select the parties"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"match"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"See your result"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"compare"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Read the statements"')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("ol",{attrs:{start:"3"}},[e("li",[t._v("This seems to be the right place. Now note the path: "),e("code",[t._v("elements.guide-button.introduction")]),t._v(". We want to\noverwrite the value at that path.")]),t._v(" "),e("li",[t._v("Now, in the Configuration Editor, open the English language by clicking 'Edit' and look for the\nOverwrites field. We're going to paste some JSON there:")])]),t._v(" "),e("div",{staticClass:"language-json extra-class"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"elements"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"guide-button"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"introduction"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Get started!"')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("ol",{attrs:{start:"5"}},[e("li",[t._v("Note, that you need to replicate the structure, but you can omit all the keys and values that you\ndon't want to overwrite.")])]),t._v(" "),e("h3",{attrs:{id:"some-translations-contain-weird-characters"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#some-translations-contain-weird-characters"}},[t._v("#")]),t._v(' Some translations contain "weird" characters')]),t._v(" "),e("p",[t._v("You might encounter strings like this one:")]),t._v(" "),e("div",{staticClass:"language-json extra-class"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"elements"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"kiosk-mode"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"description"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"The election compass will be reset now and all your answers will be deleted. | The election compass will be reset in {count} seconds and all your answers will be deleted. | The election compass will be reset in {count} second and all your answers will be deleted."')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("There are two things going on here:")]),t._v(" "),e("ul",[e("li",[t._v("The string is repeated and the repititions are seperated by a "),e("code",[t._v("|")]),t._v(". These are pluralizations. The\nsystem will pick the correct pluralization automatically. Just make sure to keep the lines "),e("code",[t._v("|")]),t._v(" and\nsurrounding spaces.")]),t._v(" "),e("li",[t._v("The strings contain curly brackets: "),e("code",[t._v("{count}")]),t._v(". As you might guess, this is a placeholder and will\nbe replaced with something else by the system. In this case, a number. You can move placeholders\naround in a sentence, but don't delete them and don't change or translate them or the system won't\nrecognize them.")])]),t._v(" "),e("p",[t._v("In general, just try to keep structures like these intact 😉")]),t._v(" "),e("h2",{attrs:{id:"adding-a-custom-language"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#adding-a-custom-language"}},[t._v("#")]),t._v(" Adding a custom language")]),t._v(" "),e("p",[t._v("If you need to, you can use the described method to overwrite all strings to get a completely custom\nlanguage. Simply copy all contents from a language and use that as a base for your own translation.")]),t._v(" "),e("p",[t._v("We're always looking to expand support for languages. If you would like to share your translations,\nplease get in touch!")])])}),[],!1,null,null,null);a.default=n.exports}}]);